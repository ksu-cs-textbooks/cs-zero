




	
	
		

	
	
		

	
	
		

	
	
		
		

	
	
		

	
	
		
		

	
	
		
		
		
		

	
	
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		
		
		

	
	
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		
		
		

	
	
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		
		
		

	
	
		
		

	
	
		

	
	
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		
		

	
	
		

	
	
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		
<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Booleans on Intro CS Textbook</title>
    <link>https://ksu-cs-textbooks.github.io/cs-zero/x-cis115-labs/6-booleans/index.html</link>
    <description>Recent content in Booleans on Intro CS Textbook</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 11 Feb 2021 00:23:05 -0500</lastBuildDate><atom:link href="https://ksu-cs-textbooks.github.io/cs-zero/x-cis115-labs/6-booleans/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Pseudocode Booleans</title>
      <link>https://ksu-cs-textbooks.github.io/cs-zero/x-cis115-labs/6-booleans/01-pseudocode-booleans/index.html</link>
      <pubDate>Thu, 11 Feb 2021 00:00:01 -0500</pubDate>
      <guid>https://ksu-cs-textbooks.github.io/cs-zero/x-cis115-labs/6-booleans/01-pseudocode-booleans/index.html</guid>
      <description>YouTube Video Resources Slides In pseudocode, we can create variables that store values using the Boolean data type. These variables can only store one of two values: true or false. So, a Boolean value is really the simplest data value we can imagine - it is a single binary bit representing a value of true or false. In some systems, we may also refer to these values as 0 or 1, but in pseudocode we&amp;rsquo;ll just use true and false.</description>
    </item>
    <item>
      <title>Pseudocode Operators</title>
      <link>https://ksu-cs-textbooks.github.io/cs-zero/x-cis115-labs/6-booleans/02-pseudocode-operators/index.html</link>
      <pubDate>Thu, 11 Feb 2021 00:00:01 -0500</pubDate>
      <guid>https://ksu-cs-textbooks.github.io/cs-zero/x-cis115-labs/6-booleans/02-pseudocode-operators/index.html</guid>
      <description>YouTube Video Resources Slides There are also many special operators that can be used to perform operations on Boolean values. These operators are used to along with one or more Boolean values in some way to produce a resulting value. Let&amp;rsquo;s review the three important Boolean operators in pseudocode.
AND Operator The first Boolean operator we&amp;rsquo;ll review is the AND operator. This operator is used to determine if both Boolean values are true, and if so the resulting value will also be true.</description>
    </item>
    <item>
      <title>Pseudocode Comparators</title>
      <link>https://ksu-cs-textbooks.github.io/cs-zero/x-cis115-labs/6-booleans/03-pseudocode-comparators/index.html</link>
      <pubDate>Thu, 11 Feb 2021 00:00:01 -0500</pubDate>
      <guid>https://ksu-cs-textbooks.github.io/cs-zero/x-cis115-labs/6-booleans/03-pseudocode-comparators/index.html</guid>
      <description>YouTube Video Resources Slides Another powerful feature of pseudocode are the comparator operators, which can be used to create Boolean values by comparing string and number values in an expression. These comparators are a powerful way to build programs that can perform different actions based on data received from the user, as we&amp;rsquo;ll see later in this lab. Let&amp;rsquo;s review the commonly used comparators in pseudocode.
Equal The equal comparator = is used to determine if two values are equivalent.</description>
    </item>
    <item>
      <title>Python Booleans</title>
      <link>https://ksu-cs-textbooks.github.io/cs-zero/x-cis115-labs/6-booleans/04-python-booleans/index.html</link>
      <pubDate>Thu, 11 Feb 2021 00:00:01 -0500</pubDate>
      <guid>https://ksu-cs-textbooks.github.io/cs-zero/x-cis115-labs/6-booleans/04-python-booleans/index.html</guid>
      <description>YouTube Video Resources Slides In Python, Boolean values are stored in the bool data type. Just like in pseudocode, variables of the bool data type can only store one of two values, True or False.
To create a Boolean variable in Python, we can simply assign those values to a variable in an assignment statement:
a = True b = False print(a) print(type(b)) When we execute that code, we&amp;rsquo;ll see the following output:</description>
    </item>
    <item>
      <title>Python Operators</title>
      <link>https://ksu-cs-textbooks.github.io/cs-zero/x-cis115-labs/6-booleans/05-python-operators/index.html</link>
      <pubDate>Thu, 11 Feb 2021 00:00:01 -0500</pubDate>
      <guid>https://ksu-cs-textbooks.github.io/cs-zero/x-cis115-labs/6-booleans/05-python-operators/index.html</guid>
      <description>YouTube Video Resources Slides Python also includes several operators that can be applied to one or two Boolean values. These operators make up the basis of Boolean logic, and allow us to construct complex expressions of Boolean values. Let&amp;rsquo;s quickly review the three basic Boolean operators present in Python.
And Operator In Python, we use the keyword and to perform the Boolean and operation. Just like in pseudocode, this operator will return True if both input values are also True, otherwise it will return False.</description>
    </item>
    <item>
      <title>Python Comparators</title>
      <link>https://ksu-cs-textbooks.github.io/cs-zero/x-cis115-labs/6-booleans/06-python-comparators/index.html</link>
      <pubDate>Thu, 11 Feb 2021 00:00:01 -0500</pubDate>
      <guid>https://ksu-cs-textbooks.github.io/cs-zero/x-cis115-labs/6-booleans/06-python-comparators/index.html</guid>
      <description>YouTube Video Resources Slides Python also uses various comparators to allow us to compare values of many different data types to produce a Boolean value. We can compare numbers, strings, and many other data types in Python using these comparators.
Since we&amp;rsquo;ve already covered the comparators in pseudocode, let&amp;rsquo;s just briefly go over all of them and discuss any ways they differ in Python compared to pseudocode.
The basic comparators in Python are:</description>
    </item>
    <item>
      <title>Summary</title>
      <link>https://ksu-cs-textbooks.github.io/cs-zero/x-cis115-labs/6-booleans/07-summary/index.html</link>
      <pubDate>Thu, 11 Feb 2021 00:00:01 -0500</pubDate>
      <guid>https://ksu-cs-textbooks.github.io/cs-zero/x-cis115-labs/6-booleans/07-summary/index.html</guid>
      <description>In this lab, we covered several major important topics. Let&amp;rsquo;s quickly review them.
Booleans in Pseudocode true false BOOLEAN() procedure to convert values 0 is false, and any other number is true Pseudocode Boolean Operators AND OR NOT Pseudocode Boolean Comparators = equal != not equal &amp;lt; less than &amp;lt;= less than or equal to &amp;gt; greater than &amp;gt;= greater than or equal to Booleans in Python True False bool() procedure to convert values If the input is the value False, the value 0, the value None, or anything with 0 length, including the empty string, it will return False.</description>
    </item>
  </channel>
</rss>





	
	
		

	
	
		

	
	
		

	
	
		

	
	
		
		

	
	
		
		
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		
		
		

	
	
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		
		
		

	
	
		
		

	
	
		

	
	
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		
		

	
	
		

	
	
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		
<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Functions on Intro CS Textbook</title>
    <link>https://ksu-cs-textbooks.github.io/cs-zero/x-cis115-labs/3-functions/</link>
    <description>Recent content in Functions on Intro CS Textbook</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 24 Oct 2020 00:23:05 -0500</lastBuildDate><atom:link href="https://ksu-cs-textbooks.github.io/cs-zero/x-cis115-labs/3-functions/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Pseudocode Procedures</title>
      <link>https://ksu-cs-textbooks.github.io/cs-zero/x-cis115-labs/3-functions/01-pseudocode-procedures/</link>
      <pubDate>Thu, 07 Jan 2021 00:00:01 -0500</pubDate>
      <guid>https://ksu-cs-textbooks.github.io/cs-zero/x-cis115-labs/3-functions/01-pseudocode-procedures/</guid>
      <description>YouTube Video Resources Slides As our programs get larger and larger, we&amp;rsquo;ll probably find that we keep repeating pieces of code over and over again in our programs. In fact, we&amp;rsquo;ve probably already done that a few times just working through this lab. What if we had some way to build a small block of code once, and then reuse it over and over again in our programs?
Thankfully, this is a core feature of most programming languages!</description>
    </item>
    <item>
      <title>Main Procedure</title>
      <link>https://ksu-cs-textbooks.github.io/cs-zero/x-cis115-labs/3-functions/02-main-procedure/</link>
      <pubDate>Thu, 07 Jan 2021 00:00:01 -0500</pubDate>
      <guid>https://ksu-cs-textbooks.github.io/cs-zero/x-cis115-labs/3-functions/02-main-procedure/</guid>
      <description>YouTube Video Resources Slides Up to this point, we&amp;rsquo;ve simply written code and expected it to run easily in our &amp;ldquo;mental model&amp;rdquo; of a computer. However, many programming languages place one additional requirement on code that we should also follow: all code must be part of a procedure.
What does this mean? Put simply, we shouldn&amp;rsquo;t place any code in our programs that isn&amp;rsquo;t part of a procedure. Or, put another way, our programs should only consist of procedures and nothing else.</description>
    </item>
    <item>
      <title>Parameters</title>
      <link>https://ksu-cs-textbooks.github.io/cs-zero/x-cis115-labs/3-functions/03-parameters/</link>
      <pubDate>Thu, 07 Jan 2021 00:00:01 -0500</pubDate>
      <guid>https://ksu-cs-textbooks.github.io/cs-zero/x-cis115-labs/3-functions/03-parameters/</guid>
      <description>YouTube Video Resources Slides The last new concept we&amp;rsquo;re going to introduce in this lab is the concept of parameters. We just learned how to create procedures in our code, but our current understanding of procedures has one very important flaw in it: a procedure will always do the same thing each time we call it! What if we want to write a procedure that performs the same operation, but uses different data each time?</description>
    </item>
    <item>
      <title>Expressions as Arguments</title>
      <link>https://ksu-cs-textbooks.github.io/cs-zero/x-cis115-labs/3-functions/04-expressions-arguments/</link>
      <pubDate>Thu, 07 Jan 2021 00:00:01 -0500</pubDate>
      <guid>https://ksu-cs-textbooks.github.io/cs-zero/x-cis115-labs/3-functions/04-expressions-arguments/</guid>
      <description>YouTube Video Resources Slides Let&amp;rsquo;s briefly consider one more important situation that may arise when calling procedures. What if the arguments provided in a procedure call are variables themselves? What does that look like?
Let&amp;rsquo;s work through an example:
PROCEDURE swap(one, two) { temp &amp;lt;- one one &amp;lt;- two two &amp;lt;- temp DISPLAY(one) DISPLAY(two) } PROCEDURE main() { first &amp;lt;- &amp;#34;Willie&amp;#34; last &amp;lt;- &amp;#34;Wildcat&amp;#34; swap(first, last) DISPLAY(first) DISPLAY(last) } main() Before reading the code trace below, take a moment to read this code and see if you can predict what the output will be.</description>
    </item>
    <item>
      <title>Functions</title>
      <link>https://ksu-cs-textbooks.github.io/cs-zero/x-cis115-labs/3-functions/05-python-functions/</link>
      <pubDate>Fri, 15 Jan 2021 00:00:01 -0500</pubDate>
      <guid>https://ksu-cs-textbooks.github.io/cs-zero/x-cis115-labs/3-functions/05-python-functions/</guid>
      <description>YouTube Video Resources Slides Python also supports the use of procedures, which allows us to write small pieces of code that can be repeatedly used throughout our programs. In Python, we call these procedures functions. We&amp;rsquo;ve already seen one example of a function in Python - the print statement is actually a function! Let&amp;rsquo;s look at how we can create and use functions in Python.
Creating a Function The process of creating a function in Python is very similar to the way we created a procedure in pseudocode.</description>
    </item>
    <item>
      <title>Main Function, Parameters, &amp; Arguments</title>
      <link>https://ksu-cs-textbooks.github.io/cs-zero/x-cis115-labs/3-functions/06-main-parameters-arguments/</link>
      <pubDate>Fri, 15 Jan 2021 00:00:01 -0500</pubDate>
      <guid>https://ksu-cs-textbooks.github.io/cs-zero/x-cis115-labs/3-functions/06-main-parameters-arguments/</guid>
      <description>YouTube Video Resources Slides Let&amp;rsquo;s review a couple other concepts related to functions in Python. These will closely mirror what we&amp;rsquo;ve already learned in pseudocode, so we&amp;rsquo;ll cover them pretty quickly here.
Main Function Just like in pseudocode, we can also create a main function in Python. The use of a main function in Python is not required at all - Python is designed as a scripting language, meaning we can write code directly in a Python file without using any functions at all.</description>
    </item>
    <item>
      <title>Summary</title>
      <link>https://ksu-cs-textbooks.github.io/cs-zero/x-cis115-labs/3-functions/07-summary/</link>
      <pubDate>Fri, 15 Jan 2021 00:00:01 -0500</pubDate>
      <guid>https://ksu-cs-textbooks.github.io/cs-zero/x-cis115-labs/3-functions/07-summary/</guid>
      <description>Pseudocode Procedures A procedure in pseudocode is a piece of code that is given a name, which can then be run by calling it elsewhere in the program.
To create a procedure, we use the following structure:
PROCEDURE procedure_name(parameter1, parameter2) { &amp;lt;block of statements&amp;gt; } Procedure names follow the same rules as variable names. Procedures may require 0 or more parameters, placed in parentheses after the procedure name. Multiple parameters are separated by commas.</description>
    </item>
  </channel>
</rss>
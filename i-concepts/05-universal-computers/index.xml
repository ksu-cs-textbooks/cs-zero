<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Universal Computers :: Intro CS Textbook</title><link>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/05-universal-computers/</link><description/><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 27 Jun 2024 12:25:42 -0500</lastBuildDate><atom:link href="https://textbooks.cs.ksu.edu/cs-zero/i-concepts/05-universal-computers/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction</title><link>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/05-universal-computers/01-introduction/</link><pubDate>Mon, 10 Aug 2020 16:27:26 -0500</pubDate><guid>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/05-universal-computers/01-introduction/</guid><description>YouTube Video Resources Slides Video Script Welcome back, everyone. In today’s video, we’re going to be talking about universal computers. Now to pretty much pick up where we left off a while ago when we were talking about Boolean logic, Claude Shannon had just proposed a way to take electrical circuits and represent any Boolean logical statement with them. And so this was a huge turning point in the history of computer science.</description></item><item><title>Top Secret Rosies</title><link>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/05-universal-computers/02-top-secret-rosies/</link><pubDate>Mon, 10 Aug 2020 16:27:26 -0500</pubDate><guid>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/05-universal-computers/02-top-secret-rosies/</guid><description/></item><item><title>Top Secret Rosies Website</title><link>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/05-universal-computers/03-top-secret-rosies-web/</link><pubDate>Mon, 10 Aug 2020 16:27:26 -0500</pubDate><guid>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/05-universal-computers/03-top-secret-rosies-web/</guid><description>Top Secret Rosies Website</description></item><item><title>Electronic Computing (Crash Course)</title><link>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/05-universal-computers/04-electronic-computing/</link><pubDate>Mon, 10 Aug 2020 16:27:26 -0500</pubDate><guid>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/05-universal-computers/04-electronic-computing/</guid><description> YouTube Video</description></item><item><title>The Imitation Game</title><link>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/05-universal-computers/05-the-imitation-game/</link><pubDate>Mon, 10 Aug 2020 16:27:26 -0500</pubDate><guid>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/05-universal-computers/05-the-imitation-game/</guid><description> YouTube Video</description></item><item><title>What ARE Universal Computers?</title><link>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/05-universal-computers/06-what-are-universal-computers/</link><pubDate>Mon, 10 Aug 2020 16:27:26 -0500</pubDate><guid>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/05-universal-computers/06-what-are-universal-computers/</guid><description>YouTube Video Resources Slides Video Script So what really is a universal computer? We’ve thrown that term around a little bit. We’ve also talked about what it means to be a truly general purpose computer or reprogrammable computer compared to a fixed program computer like what the original Difference Engine was. So, this is what made the ENIAC so unique as well as the mark one, although to a lesser extent.</description></item><item><title>Alan Turing</title><link>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/05-universal-computers/07-alan-turing/</link><pubDate>Mon, 10 Aug 2020 16:27:26 -0500</pubDate><guid>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/05-universal-computers/07-alan-turing/</guid><description> YouTube Video</description></item><item><title>Modern Turing Machines</title><link>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/05-universal-computers/08-modern-turing/</link><pubDate>Mon, 10 Aug 2020 16:27:26 -0500</pubDate><guid>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/05-universal-computers/08-modern-turing/</guid><description> YouTube Video</description></item><item><title>Turing Machine Example</title><link>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/05-universal-computers/09-turing-machine-example/</link><pubDate>Mon, 10 Aug 2020 16:27:26 -0500</pubDate><guid>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/05-universal-computers/09-turing-machine-example/</guid><description>YouTube Video Resources Slides Video Script Hello everyone in this video we’re going to take a look at a detailed example on how a Turing machine may actually perform a common operation that we would do with a regular program. Remember that our Turing machine has eight simple instructions that it can execute using the control arm or the the reader that the machine or the program is actually loaded on.</description></item><item><title>Von Neumann Architecture</title><link>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/05-universal-computers/10-von-neumann/</link><pubDate>Mon, 10 Aug 2020 16:27:26 -0500</pubDate><guid>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/05-universal-computers/10-von-neumann/</guid><description>YouTube Video Resources Slides Video Script Unfortunately, with all the computers that we’ve talked about so far, they don’t really look like the computers that we have today, right? These machines took up entire, literally entire rooms and weighed tons and had millions upon millions of different individual parts. And so how did we get from a giant computer that takes up our room to a computer that fits on your wrist?</description></item><item><title>Pattern on the Stone Reading</title><link>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/05-universal-computers/11-pots-reading/</link><pubDate>Wed, 27 May 2020 10:53:26 -0500</pubDate><guid>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/05-universal-computers/11-pots-reading/</guid><description>Read Pattern on the Stone, Chapter 4.</description></item></channel></rss>
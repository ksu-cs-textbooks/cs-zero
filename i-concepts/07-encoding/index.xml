<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Encoding :: Intro CS Textbook</title><link>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/07-encoding/</link><description/><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 27 Jun 2024 12:25:42 -0500</lastBuildDate><atom:link href="https://textbooks.cs.ksu.edu/cs-zero/i-concepts/07-encoding/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction</title><link>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/07-encoding/01-introduction/</link><pubDate>Fri, 28 Aug 2020 16:27:26 -0500</pubDate><guid>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/07-encoding/01-introduction/</guid><description>YouTube Video Resources Slides Video Script In this module, we will discuss how we can store data in our computers using various types of encoding. Recall, the computers only operate on binary values, which we’ll talk about a lot today in this lecture. And so how do we take things such as images and text and graphics and videos, and make all of those things accessible to our computer? Before we continue, let’s take a look at a few of the things we’ve covered in this class.</description></item><item><title>AT&amp;T Archives: Invention of the First Electric Computer</title><link>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/07-encoding/02-att-first-computer/</link><pubDate>Fri, 28 Aug 2020 16:27:26 -0500</pubDate><guid>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/07-encoding/02-att-first-computer/</guid><description> YouTube Video</description></item><item><title>Binary Numbers</title><link>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/07-encoding/03-binary/</link><pubDate>Fri, 28 Aug 2020 16:27:26 -0500</pubDate><guid>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/07-encoding/03-binary/</guid><description>YouTube Video Resources Slides Video Script The first thing we’re going to cover in this module is the concept of binary numbers. Binary numbers are really the core of everything that a computer does. And so we need a way that we can convert the base 10 numbers that we know today such as 24 42 86, into binary numbers that only use ones and zeros.
So let’s start with simple natural numbers, the counting numbers, the whole numbers that are greater than zero.</description></item><item><title>Two's Complement</title><link>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/07-encoding/04-twos-complement/</link><pubDate>Fri, 28 Aug 2020 16:27:26 -0500</pubDate><guid>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/07-encoding/04-twos-complement/</guid><description>YouTube Video Resources Slides Video Script In the previous video, we looked at binary numbers that are natural numbers, which are whole numbers greater than zero. There are a couple other binary data types that we’re going to look at in this module. The first one would be a signed integer, and assigned integer allows us to have negative values by changing the sign at the front of the number.</description></item><item><title>Floating Point</title><link>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/07-encoding/05-floating-point/</link><pubDate>Fri, 28 Aug 2020 16:27:26 -0500</pubDate><guid>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/07-encoding/05-floating-point/</guid><description>YouTube Video Resources Slides Video Script So far in this module, we’ve only dealt with whole numbers such as positive and negative whole numbers or integers. But what about numbers that have decimal points in them? How would we deal with those? In mathematics, of course, we call these rational numbers because they can be expressed as a ratio or a fraction. And so in mathematics, one thing that we’ve used for rational numbers would be scientific notation.</description></item><item><title>Floating Point Numbers - Computerphile</title><link>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/07-encoding/06-float-point-computerphile/</link><pubDate>Fri, 28 Aug 2020 16:27:26 -0500</pubDate><guid>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/07-encoding/06-float-point-computerphile/</guid><description> YouTube Video</description></item><item><title>Other Data Types</title><link>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/07-encoding/07-other-types/</link><pubDate>Fri, 28 Aug 2020 16:27:26 -0500</pubDate><guid>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/07-encoding/07-other-types/</guid><description>YouTube Video Resources Slides Video Script So now that we understand how to encode numbers into binary, let’s look at some other data types and see how those work. The nice thing is in the computer, everything is really just a binary number. It’s all ones and zeros. So we really just have to find a way to take other types of data and convert them into numbers. And then we can store those numbers in our computer and use them in our computer programs.</description></item><item><title>Pattern on the Stone Reading</title><link>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/07-encoding/08-pots-reading/</link><pubDate>Wed, 27 May 2020 10:53:26 -0500</pubDate><guid>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/07-encoding/08-pots-reading/</guid><description>Read Pattern on the Stone, Chapter 6.</description></item></channel></rss>
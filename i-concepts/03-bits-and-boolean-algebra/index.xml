<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Bits and Boolean Algebra :: Intro CS Textbook</title><link>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/03-bits-and-boolean-algebra/</link><description/><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 27 Jun 2024 12:25:42 -0500</lastBuildDate><atom:link href="https://textbooks.cs.ksu.edu/cs-zero/i-concepts/03-bits-and-boolean-algebra/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction</title><link>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/03-bits-and-boolean-algebra/01-introduction/</link><pubDate>Wed, 27 May 2020 10:53:26 -0500</pubDate><guid>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/03-bits-and-boolean-algebra/01-introduction/</guid><description>YouTube Video Resources Slides Video Script Introduction (Slide 1-2) For this lesson, we’re going to be talking primarily about Boolean logic, Boolean algebra and how that plays into computer science and the foundations of how important that is and the role it plays and what we do. So before we get started, and before we can talk about things such as Boolean logic, we need to know where it came from.</description></item><item><title>Operators</title><link>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/03-bits-and-boolean-algebra/02-operators/</link><pubDate>Wed, 27 May 2020 10:53:26 -0500</pubDate><guid>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/03-bits-and-boolean-algebra/02-operators/</guid><description>YouTube Video Resources Slides Video Script Boolean Operators (Slide 6) And Let’s take a look at what the Boolean and operator does out in this Venn diagram here we’re going to kind of use these to showcase where the Boolean statements that we’re checking out with the Boolean operator where these statements are actually evaluated to be true. So if we assume that we are two facts here, A and B are both true.</description></item><item><title>Boolean Algebra</title><link>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/03-bits-and-boolean-algebra/03-algebra/</link><pubDate>Wed, 27 May 2020 10:53:26 -0500</pubDate><guid>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/03-bits-and-boolean-algebra/03-algebra/</guid><description>YouTube Video Resources Slides Video Script DeMorgan’s Theorem (Slide 7) So with all these new tools, we needed some new algebraic rules to really deal with them. Thankfully, most of the rules you know, apply quite well, but there’s one rule that needed to be added. In mathematics. When you multiply by negative one, you have to change the signs. Similarly, Augustus DeMorgan came up with a way to deal with the negation of entire Boolean logic statements.</description></item><item><title>Logic to Switches</title><link>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/03-bits-and-boolean-algebra/04-logic-to-switches/</link><pubDate>Wed, 27 May 2020 10:53:26 -0500</pubDate><guid>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/03-bits-and-boolean-algebra/04-logic-to-switches/</guid><description>YouTube Video Resources Slides Video Script Logic via Electrical Switches? (Slide 9) With the new tools from Boole and DeMorgan, others began to see where they could be applied in the real world. In 1886, Charles Sanders Peirce noted in a letter that logical operations could be easily simulated by electrical switches. Many others worked on the idea too many to name here, but 51 years later.
Claude Shannon (Slide 10) In 1937, something happened.</description></item><item><title>Truth Tables</title><link>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/03-bits-and-boolean-algebra/05-truth-tables/</link><pubDate>Wed, 27 May 2020 10:53:26 -0500</pubDate><guid>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/03-bits-and-boolean-algebra/05-truth-tables/</guid><description>YouTube Video Resources Slides Video Script Overview Let’s go through an example of some Boolean logic now that we’ve covered some of the operators and some of the rules that govern the Boolean algebra behind it. A lot of times what you’ll see in computer science, especially when you’re dealing with Boolean logic and complex algorithms, our truth tables, truth tables showcase all the different options for each Boolean variable inside of a Boolean logic statement, as well as what output those particular facts for those variables actually produce.</description></item><item><title>Boolean Logic (Crash Course)</title><link>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/03-bits-and-boolean-algebra/06-crash-course/</link><pubDate>Wed, 27 May 2020 10:53:26 -0500</pubDate><guid>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/03-bits-and-boolean-algebra/06-crash-course/</guid><description>YouTube Video Notes About This Selection In this video, Carrie Anne shares the principals of binary numbers and how we use Boolean Algebra to work with binary values. We get to see the truth tables for the basic statements (or, and, not, xor) as well as their respective logic gates. We also get a good primer for working on more complex statements.
Reference CrashCourse. “Boolean Logic &amp; Logic Gates: Crash Course Computer Science #3 “.</description></item><item><title>Worked Example</title><link>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/03-bits-and-boolean-algebra/07-worked-example/</link><pubDate>Wed, 27 May 2020 10:53:26 -0500</pubDate><guid>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/03-bits-and-boolean-algebra/07-worked-example/</guid><description>YouTube Video Resources Slides Video Script Example 1 (Slide 13) So let’s take a look at example one. And the best way to start this is where the output is actually true. So if we examine this line here, this line and this line, we can see that when B and C are true, output is True. When a and c are true, the output is True, or when all three are true, the output is also true.</description></item><item><title>Pattern on the Stone Reading</title><link>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/03-bits-and-boolean-algebra/08-pots-reading/</link><pubDate>Wed, 27 May 2020 10:53:26 -0500</pubDate><guid>https://textbooks.cs.ksu.edu/cs-zero/i-concepts/03-bits-and-boolean-algebra/08-pots-reading/</guid><description>Read Pattern on the Stone, Chapter 2.
“The Pattern on the Stone: The Simple Ideas that Make Computers Work” by W. Daniel Hillis. ISBN 046502596X, newer version is also available and will work fine</description></item></channel></rss>
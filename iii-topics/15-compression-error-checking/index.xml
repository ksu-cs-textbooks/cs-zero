<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Compression &amp; Error Checking :: Intro CS Textbook</title><link>https://textbooks.cs.ksu.edu/cs-zero/iii-topics/15-compression-error-checking/</link><description/><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 27 Jun 2024 12:25:42 -0500</lastBuildDate><atom:link href="https://textbooks.cs.ksu.edu/cs-zero/iii-topics/15-compression-error-checking/index.xml" rel="self" type="application/rss+xml"/><item><title>Compression - Run Length Encoding</title><link>https://textbooks.cs.ksu.edu/cs-zero/iii-topics/15-compression-error-checking/01-rle/</link><pubDate>Fri, 16 Oct 2020 00:27:26 -0500</pubDate><guid>https://textbooks.cs.ksu.edu/cs-zero/iii-topics/15-compression-error-checking/01-rle/</guid><description>YouTube Video Resources Slides Video Script In this module, we will spend a lot of time talking about compression and error checking in our computers. We’ve already talked about compression a little bit in the data encoding module earlier this semester. But now we’re going to spend an entire module talking about just these two topics. First, we’re going to talk about in compression. What do you think compression is and why do you think it’s useful?</description></item><item><title>Compression - Huffman Coding</title><link>https://textbooks.cs.ksu.edu/cs-zero/iii-topics/15-compression-error-checking/02-huffman/</link><pubDate>Fri, 16 Oct 2020 00:27:26 -0500</pubDate><guid>https://textbooks.cs.ksu.edu/cs-zero/iii-topics/15-compression-error-checking/02-huffman/</guid><description>YouTube Video Resources Slides Video Script Next, let’s take a look at another form of compression called Huffman coding. Huffman coding uses the frequency of the letters in a piece of text to reduce the amount of space that they take up in the encoded data. To do this, we will count the occurrences of each character in our text. And we’ll use that count to make a binary tree with the data.</description></item><item><title>Error Checking - Pinpoint</title><link>https://textbooks.cs.ksu.edu/cs-zero/iii-topics/15-compression-error-checking/03-pinpoint/</link><pubDate>Fri, 16 Oct 2020 00:27:26 -0500</pubDate><guid>https://textbooks.cs.ksu.edu/cs-zero/iii-topics/15-compression-error-checking/03-pinpoint/</guid><description>YouTube Video Resources Slides Video Script Now let’s talk about error checking. What do you think error checking means when we’re talking about sending and retrieving data? And why do you think it would be useful? Well, let’s take a look at an example. When we send data, such as this text, hello there, sometimes the data might get garbled in transmission. When you were a kid, if you played with radios or walkie talkies, or anything like that, you might have had trouble understanding what other people say, Heck, even it happens today, sometimes on cell phone calls.</description></item><item><title>Error Checking - Fletcher's Checksum</title><link>https://textbooks.cs.ksu.edu/cs-zero/iii-topics/15-compression-error-checking/04-fletcher/</link><pubDate>Fri, 16 Oct 2020 00:27:26 -0500</pubDate><guid>https://textbooks.cs.ksu.edu/cs-zero/iii-topics/15-compression-error-checking/04-fletcher/</guid><description>&lt; warning-1 The C2 total on the slide at 0:54 - 2:10 is incorrect. The total is 7336 but that value modulo 255 is 196, not 96 as shown in the video.
YouTube Video Resources Slides Video Script Let’s look at an even better way to do a checksum to check and see if our data is correct. This is called Fletcher’s checksum. And here we’re giving a quick pseudocode of the algorithm that is used to generate Fletcher’s checksum.</description></item><item><title>Error Checking - Other Methods</title><link>https://textbooks.cs.ksu.edu/cs-zero/iii-topics/15-compression-error-checking/05-other-methods/</link><pubDate>Fri, 16 Oct 2020 00:27:26 -0500</pubDate><guid>https://textbooks.cs.ksu.edu/cs-zero/iii-topics/15-compression-error-checking/05-other-methods/</guid><description>YouTube Video Resources Slides Video Script Let’s go over a couple other error checking methods that you might run across, we’re not going to go into these in too much detail because they are kind of complex at this level. But we’ll give you an idea of what’s out there, just so you can say you’ve seen it. One interesting example is the cyclic redundancy check or CRC. With CRC will have some sort of binary value.</description></item><item><title>Nine Algorithms that Changed the Future Ch 1 - Introduction</title><link>https://textbooks.cs.ksu.edu/cs-zero/iii-topics/15-compression-error-checking/06-9algs-intro/</link><pubDate>Mon, 10 Aug 2020 16:27:26 -0500</pubDate><guid>https://textbooks.cs.ksu.edu/cs-zero/iii-topics/15-compression-error-checking/06-9algs-intro/</guid><description>Nine Algorithms that Changed the Future Ch 1 - Introduction</description></item><item><title>Nine Algorithms that Changed the Future Ch 5 - Error Correcting Codes</title><link>https://textbooks.cs.ksu.edu/cs-zero/iii-topics/15-compression-error-checking/07-9algs-ch5/</link><pubDate>Mon, 10 Aug 2020 16:27:26 -0500</pubDate><guid>https://textbooks.cs.ksu.edu/cs-zero/iii-topics/15-compression-error-checking/07-9algs-ch5/</guid><description>Nine Algorithms that Changed the Future Ch 5 - Error Correcting Codes</description></item><item><title>Nine Algorithms that Changed the Future Ch 7 - Data Compression</title><link>https://textbooks.cs.ksu.edu/cs-zero/iii-topics/15-compression-error-checking/08-9algs-ch7/</link><pubDate>Mon, 10 Aug 2020 16:27:26 -0500</pubDate><guid>https://textbooks.cs.ksu.edu/cs-zero/iii-topics/15-compression-error-checking/08-9algs-ch7/</guid><description>Nine Algorithms that Changed the Future Ch 7 - Data Compression</description></item></channel></rss>